package stopwatch;

public class MainStopWatch {

	public static void main(String[] args) {
	
		StopWatch stopwatch=new StopWatch();
		

	}

}

package stopwatch;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class StopWatch implements ActionListener {
	
	JFrame frame= new JFrame();
	JButton startButton=new JButton("START");
	JButton resetButton=new JButton("RESET");
	JLabel timeLabel=new JLabel();
	int elapsed=0;
	int seconds=0;
	int minutes=0;
	int hours=0;
    boolean started=false;
    String second=String.format("%02d", seconds);
    String minute=String.format("%02d", minutes);
    String hour=String.format("%02d", hours);
    
    Timer timer=new Timer(1000,new ActionListener() {
    	
    	public void actionPerformed(ActionEvent e)
    	{
    		elapsed=elapsed+1000;
    		hours=(elapsed/3600000);
    		minutes=(elapsed/60000)%60;
    		seconds=(elapsed/1000)%60;
    		second=String.format("%02d", seconds);
    		minute=String.format("%02d", minutes);
    		hour=String.format("%02d", hours);
    		timeLabel.setText(hour+":"+minute+":"+second);
    	}
    	
    });
    
    
	
	
	StopWatch()
	{
		timeLabel.setText(hour+":"+minute+":"+second);
		timeLabel.setBounds(100, 100, 200, 100);
		timeLabel.setFont(new Font("Verdana",Font.PLAIN,35));
		timeLabel.setBorder(BorderFactory.createBevelBorder(1));
		timeLabel.setOpaque(true);
		timeLabel.setHorizontalAlignment(JTextField.CENTER);
		
		startButton.setBounds(100, 200, 100, 50);
		startButton.setFont(new Font("Ink free",Font.PLAIN,20));
		startButton.setFocusable(false); 
		startButton.addActionListener(this);
		
		resetButton.setBounds(200, 200, 100, 50);
		resetButton.setFont(new Font("Ink free",Font.PLAIN,20));
		resetButton.setFocusable(false); 
		resetButton.addActionListener(this);
		
		frame.add(startButton);
		frame.add(resetButton);
		frame.add(timeLabel);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(420,420);
		frame.setLayout(null);
		frame.setVisible(true);
	}
	public void Start()
	{
		timer.start();
	}
	public void Stop()
	{
		timer.stop();
	}
	public void Reset()
	{
		timer.stop();
		elapsed=0;
		seconds=0;
		minutes=0;
		hours=0;
		second=String.format("%02d", seconds);
		minute=String.format("%02d", minutes);
		hour=String.format("%02d", hours);
		timeLabel.setText(hour+":"+minute+":"+second);
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
	
		if(e.getSource()==startButton)
		{
			if(started==false)
			{
				started=true;
				startButton.setText("STOP");
				Start();
			}
			else
			{
				started=false;
				startButton.setText("START");
				Stop();
			}
		}
		
		if(e.getSource()==resetButton)
		{
			started=false;
			startButton.setText("START");
			Reset();
		}
		
	}

}
